#pragma checksum "/Users/zuziawisniewska/Documents/studia/semV/pp/roboczyprojekt/zuzannawisniewska-instock/Views/Statystyki/SprzedazMiesieczna.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "f64b8ed2484f68e5eb71b72b6132d255283284d4"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Statystyki_SprzedazMiesieczna), @"mvc.1.0.view", @"/Views/Statystyki/SprzedazMiesieczna.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "/Users/zuziawisniewska/Documents/studia/semV/pp/roboczyprojekt/zuzannawisniewska-instock/Views/_ViewImports.cshtml"
using InStock;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "/Users/zuziawisniewska/Documents/studia/semV/pp/roboczyprojekt/zuzannawisniewska-instock/Views/_ViewImports.cshtml"
using InStock.Models;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"f64b8ed2484f68e5eb71b72b6132d255283284d4", @"/Views/Statystyki/SprzedazMiesieczna.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"57ab4790eedc05e8d8b3d6e78393b67a80f22571", @"/Views/_ViewImports.cshtml")]
    public class Views_Statystyki_SprzedazMiesieczna : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<List<InStock.Models.SprzedazMiesieczna.SprzedazMiesiecznaPodsumowanie>>
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            WriteLiteral("\n<canvas id=\"myChart\" width=\"400\" height=\"400\"></canvas>\n<script>\n var colors = [\'#0099cc\', \'#b366ff\', \'#b30086\', \'#990000\', \'#ff661a\', \'#ffff00\', \'#44cc00\', \'#39ac73\', \'#b3b3ff\', \'#ff80bf\'];\n    var dane = ");
#nullable restore
#line 6 "/Users/zuziawisniewska/Documents/studia/semV/pp/roboczyprojekt/zuzannawisniewska-instock/Views/Statystyki/SprzedazMiesieczna.cshtml"
          Write(Html.Raw(Json.Serialize(Model)));

#line default
#line hidden
#nullable disable
            WriteLiteral(@";
    var labels = dane.map(x => x.data);
    var data = {};
    for (var i=0; i<dane.length; i++)
    {
        var pojedynczeDane = dane[i];
        for(var j=0;j<pojedynczeDane.sprzedazMiesieczna.length;j++) {
            var sprzedazProduktu = pojedynczeDane.sprzedazMiesieczna[j];
            if (!data[sprzedazProduktu.productId]) {
                data[sprzedazProduktu.productId] = { ilosc: [], nazwa: sprzedazProduktu.nazwa, productId: sprzedazProduktu.productId};
            }
            data[sprzedazProduktu.productId].ilosc.push(sprzedazProduktu.ilosc);
        }
    }
    console.log(labels);
    console.log(data);

    var datasets = [];
    Object.keys(data).forEach((klucz, index) => {
        var daneProduktu = data[klucz];
        var dataset = {
            label: daneProduktu.nazwa,
            backgroundColor: colors[index % colors.length],
            borderColor: colors[index % colors.length],
            data: daneProduktu.ilosc,
            fill: false
        }
        datasets.push(data");
            WriteLiteral(@"set);
    });
    console.log(datasets);

    window.onload = function () {
        var ctx = document.getElementById('myChart');

        var myChart = new Chart(ctx, {
            type: 'line',
            data: {
                labels: labels,
                datasets: datasets
            },
            options: {
                responsive: true,
                title: {
                    display: true,
                    text: 'Sprzedaż miesięczna'
                },
                tooltips: {
                    mode: 'index',
                    intersect: false,
                },
                hover: {
                    mode: 'nearest',
                    intersect: true
                },
                scales: {
                    xAxes: [{
                        display: true,
                        scaleLabel: {
                            display: true,
                            labelString: 'Daty'
                        }
                    }],
                    yAxes: [{
 ");
            WriteLiteral(@"                       display: true,
                        scaleLabel: {
                            display: true,
                            labelString: 'Ilość'
                        }
                    }]
                }
            }
        });
    }

</script>");
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<List<InStock.Models.SprzedazMiesieczna.SprzedazMiesiecznaPodsumowanie>> Html { get; private set; }
    }
}
#pragma warning restore 1591
